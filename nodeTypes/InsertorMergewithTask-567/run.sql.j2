{#
        Copyright (c) 2025 Coalesce. All rights reserved.
    This script and its associated documentation are confidential and proprietary to Coalesce.
    Unauthorized reproduction, distribution, or disclosure of this material is strictly prohibited.
    Coalesce permits you to copy and modify this script for the purposes of using with Coalesce but
    does not permit copying or modification for any other purpose.  
    #}
    {# == Node Type Name           : Insert Or Merge With Task == #}
    {# == Node Type Description    : This node insert data into table == #}

{# Development mode -To test the SQL the task will execute to make sure it runs without errors and returns the expected data #}

{% if config.devMode == true %}

    {% set nsVariables = namespace() %}

    {# To mimic truncate behavior only incase of insert loadType#}
    {% if config.loadType == 'Insert' %}
        {% if config.truncateBefore %}
            {% set truncateBehavior = 'INSERT OVERWRITE' %}
        {% else %}
            {% set truncateBehavior = 'INSERT' %}
        {% endif -%}
    {% endif -%}

    {# Merge partition by and order by #}
    {%- if config.loadType == 'Merge' -%}
        {% set tableColumnNames = columns
                                    | map(attribute='name')
                                    | list %}
        {% set tableColumnNamesUpdate = tableColumnNames
                                            | reject('in', config.partitionBy.get('items')
                                            | map(attribute='partColName.name'))
                                            | list %}
        
        {% for partCol in config.partitionBy.get('items') %}
            {%- if loop.first -%}
                {% set nsVariables.partition = '"' + partCol.partColName.name + '"' %}
            {% else %}
                {% set nsVariables.partition = nsVariables.partition + ', "' + partCol.partColName.name + '"' %}
            {%- endif -%}

            {% set tableColumnNamesUpdate = tableColumnNames | reject('in', partCol.partColName.name) | list %}
        {% endfor %}

        {% for ordCol in config.mergeOrderBy.get('items') %}
            {%- if loop.first -%}
                {% set nsVariables.mergeOrderBy = '"' + ordCol.colName.name + '" ' + ordCol.sortOrd %}
            {% else %}
                {% set nsVariables.mergeOrderBy = nsVariables.mergeOrderBy + ', "' + ordCol.colName.name + '" ' + ordCol.sortOrd %}
            {%- endif -%}
        {% endfor %}

        {% set nsVariables.rowNumber = 'ROW_NUMBER() OVER (PARTITION BY ' + nsVariables.partition + ' ORDER BY ' + nsVariables.mergeOrderBy + ')' %}

        {%- set nsVariables.tableKey = config.partitionBy.get('items') %}
        {% set nsVariables.tableKey = nsVariables.tableKey | map(attribute='partColName.name') | list %}
    {%- endif -%}

    {{ stage('Insert or Merge Data') }}

        {% if config.loadType == 'Insert' -%} 
            {{ truncateBehavior }} INTO {{ ref_no_link(node.location.name, node.name) }}
            (
                {% for col in columns %}
                    "{{ col.name }}"
                    {%- if not loop.last -%},{% endif %}
                {% endfor %}
            )
            {% for source in sources %}
                /* Combine Sources if needed */
                    {% if loop.first %}
                SELECT
                    {% if config.selectDistinct %}
                DISTINCT
                    {% endif %}
                    {% for col in columns  %}
                "{{ col.name }}" AS "{{ col.name }}"
                    {% if not loop.last %}, {% endif %}
                    {% endfor %}
                FROM
                (
                        {% endif %}
                    SELECT
                        {% if config.selectDistinct %}
                    DISTINCT
                        {% endif %}
                        {% for col in source.columns %}
                    {{ get_source_transform(col) }} AS "{{ col.name }}"{% if not loop.last %}, {% endif %}
                        {% endfor %}
                    {{ source.join }}                  
                        {% if not loop.last %}
                    {{ config.insertStrategy }}
                        {% endif %}
                        {% if loop.last %}
                )
                        {% endif %}
                    {% endfor %}
                    {% if config.groupByAll %}
                GROUP BY ALL
                    {% endif %}
                {{ sortorder_by_colv() }}
            {% else -%}
            MERGE INTO {{ ref_no_link(node.location.name, node.name) }} tgt USING
        -- Select Statement Preparing Data for Merge
        (
            {% for source in sources %}
                /* Combine Sources if needed */
                        {% if loop.first %}
                    SELECT
                        {% if config.selectDistinct %}
                    DISTINCT
                        {% endif %}
                        {% for col in columns  %}
                    "{{ col.name }}" AS "{{ col.name }}"
                        {% if not loop.last %}, {% endif %}
                        {% endfor %}
                    FROM
                    (
                            {% endif %}
                        SELECT
                            {% if config.selectDistinct %}
                        DISTINCT
                            {% endif %}
                            {% for col in source.columns %}
                        {{ get_source_transform(col) }} AS "{{ col.name }}"{% if not loop.last %}, {% endif %}
                            {% endfor %}
                        {{ source.join }}                 
                            {% if not loop.last %}
                        {{ config.insertStrategy }}
                            {% endif %}
                            {% if loop.last %}
                    )
                        {% endif %}
                        {% endfor %}
                        {% if config.groupByAll %}
                    GROUP BY ALL{% endif %}
                    QUALIFY {{ nsVariables.rowNumber }} = 1
                    {{ sortorder_by_colv() }}
                ) src
                -- Join Condition
            ON
                {% for col in nsVariables.tableKey -%}
            src."{{ col }}" = tgt."{{ col }}"
                    {% if not loop.last %} AND {% endif %}
                {%- endfor -%}
                -- What to do if data is matched based on table key
            WHEN MATCHED THEN UPDATE SET
                {%- for col in tableColumnNamesUpdate %}
                    {% if col not in ["SYSTEM_CREATE_DATE"]%}
            tgt."{{ col }}" = src."{{ col }}"
                        {%- if not loop.last -%}, {%- endif %}
                    {% endif %}
                {%- endfor %}
            -- What to do with new records based on table key
            WHEN NOT MATCHED THEN INSERT
                (
                {%- for col in columns -%}
            "{{ col.name }}"
                        {%- if not loop.last -%}, {% endif %}
                {% endfor %})
            VALUES (                                                        
                {%- for col in columns -%}
            src."{{ col.name }}"
                        {%- if not loop.last -%}, {% endif %}
                {% endfor %}
        )
            {%- endif -%}
{% endif -%}