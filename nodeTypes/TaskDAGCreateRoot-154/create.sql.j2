{#
    Copyright (c) 2023 Coalesce. All rights reserved.
This script and its associated documentation are confidential and proprietary to Coalesce.
Unauthorized reproduction, distribution, or disclosure of this material is strictly prohibited.
Coalesce permits you to copy and modify this script for the purposes of using with Coalsce but
does not permit copying or modification for any other purpose.  
#}
{# == Node Type Version        : 1  == #}
{# == Node Type Name           : Task DAG Create Root == #}
{# == Node Type Description    : This node creates a standalone root task that initiates a run of the DAG == #}


{# Parameter Check for Deployment #}
{%if desiredState and currentState != desiredState and desiredState.config.schedulingMode == 'Warehouse Task' %}
     {% if desiredState.parameters == {} or 'targetTaskWarehouse' not in  desiredState.parameters or desiredState.parameters.targetTaskWarehouse == ''%}

         {{stage('WARNING')}}
         
          /*Add parameter targetTaskWarehouse in workspace settings and deployment environment for successful execution of node.
          The default value for the parameter is 'DEV ENVIRONMENT'.
          For more information, refer to the documentation.*/
	{%endif%}
{%endif%}

{% if (currentState == undefined and desiredState != undefined) or (currentState != undefined and desiredState != undefined ) and (currentState != desiredState) %}

{% set targetNodeDatabase = ref_no_link(desiredState.node.location.name, desiredState.node.name).split('.')[0] %} 
{% set targetNodeSchema = ref_no_link(desiredState.node.location.name, desiredState.node.name).split('.')[1] %} 

{# Task Info #}
{% set taskName = desiredState.node.name  %}
{% set fullyQualifiedTaskName = ref_no_link(desiredState.node.location.name, taskName) %}
      {# Task Type #}
        {%- if desiredState.config.schedulingMode == 'Warehouse Task' -%} 
            {# Can be updated during deployment via a parameter to account for different warehouse names in different deployments #}
           {% if 'targetTaskWarehouse'  in  desiredState.parameters %}
			{% if desiredState.parameters.targetTaskWarehouse == 'DEV ENVIRONMENT' %}
                {% set taskType = 'WAREHOUSE = ' + desiredState.config.whName %}
            {% else %}
                {% set taskType = 'WAREHOUSE = ' + desiredState.parameters.targetTaskWarehouse %}
            {% endif %}
		   {% endif %}
        {%- else -%}
            {%- set taskType = 'USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = ' + desiredState.config.serverlessSize -%} 
        {%- endif -%}
{% set nsVariables = namespace() %}

{# Schedule Type #}
{%- if desiredState.config.schedulePeriodOption == 'Minutes' -%} 
    {%- set nsVariables.taskWhenRun = 'SCHEDULE = ' + "'" + desiredState.config.schedulePeriod + ' MINUTE' + "'" -%} 
{% else %}
    {%- set nsVariables.taskWhenRun = 'SCHEDULE = ' + "'" + 'USING CRON ' + desiredState.config.scheduleCRON+"'" %}
{%- endif -%}

{{ stage('Suspend Root Task', true, "sql", "alter") }}
ALTER TASK IF EXISTS {{ fullyQualifiedTaskName }} SUSPEND

{{ stage('Create Task', true, "sql", "create") }}
CREATE OR REPLACE TASK 
    {{ fullyQualifiedTaskName }} 
    {{ taskType}} 
    {{ nsVariables.taskWhenRun }} 
    {% if nsVariables.poll != 'WHEN ' %} {{ nsVariables.poll }} {% endif %}
AS 
{{desiredState.config.tskSql }} 

{% elif desiredState == undefined and currentState != undefined%}

{# Task Info #}
{% set targetNodeDatabase = ref_no_link(currentState.node.location.name, currentState.node.name).split('.')[0] %} 
{% set targetNodeSchema = ref_no_link(currentState.node.location.name, currentState.node.name).split('.')[1] %} 

{# Task Info #}
{% set taskName = currentState.node.name  %}
{% set fullyQualifiedTaskName = ref_no_link(currentState.node.location.name, taskName) %}

{{ stage('Suspend Root Task', true, "sql", "alter") }}
    ALTER TASK IF EXISTS {{ fullyQualifiedTaskName }} SUSPEND
{{ stage('Drop Current Task', true, "sql", "drop") }}
    DROP TASK IF EXISTS {{ fullyQualifiedTaskName }} 

{% endif %}
